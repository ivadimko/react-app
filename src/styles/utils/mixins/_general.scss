@mixin selection($bg, $text: null) {
  ::selection {
    background: $bg;
    @if $text {
      color: $text;
    }
  }
}

@mixin justify {
  text-align: justify;
  .text-center & {
    text-align: center;
  }
}

@mixin covers-parent {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

@mixin layers {
  display: -ms-grid;
  display: grid;
  grid-template-areas: 'layers';
  -ms-grid-columns: 100%;
  -ms-grid-rows: 100%;
  grid-template-columns: 100%;
  -ms-flex-align: center;
  > * {
    grid-area: layers;
  }
  &__center {
    align-self: center;
  }
  &__end {
    align-self: end;
  }
}

@mixin image-cover {
  position: relative;
  z-index: 1;
  overflow: hidden;
  height: 1000px;
  width: calc(100% + #{$indent-s});
  > img, > video {
    height: 100%;
    width: 100%;
    object-fit: cover;
    @include if-edge() {
      height: unset;
      width: unset;
      min-height: 100%;
      min-width: 100%;
      position: absolute;
      top: 0;
      left: 0;
    }
  }
}

@mixin image-responsive {
  padding-top: percentage(9/16);
  height: auto;
  > img, > video{
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

@mixin image-contain {
  overflow: hidden;
  display: flex;
  > img, > video {
    flex: 1 0 100%;
    object-fit: contain;
  }
}

@mixin links-hover-underline {
  position: relative;
  &::after {
    position: absolute;
    left: 4px;
    right: 4px;
    bottom: 0;
    height: 4px;
    z-index: -1;
    content: '';
    transform: scaleX(0);
    transition: transform $duration $easing;
    transform-origin: right center;
    background: $c-accent;
    pointer-events: none;
  }
  &:hover::after {
    transform-origin: left center;
    transform: scaleX(1);
    transition-delay: .1s;
  }
}

@mixin hover-opacity {
  transition: opacity $duration $easing;
  &:hover {
    opacity: .66;
  }
}

@mixin links-hover-opacity {
  a {
    transition: opacity $duration $easing;
    &:hover {
      opacity: .66;
    }
    &:active{
      opacity: 1;
    }
  }
}

@mixin webkit-smoothscroll {
  overflow: hidden;
  overflow-y: scroll;
  -webkit-overflow-scrolling: touch;
}

@mixin mid-dot {
  &::after {
    content: $mid-dot;
    margin: 0 $text-indent;
  }
}

@mixin button-reset {
  border: none;
  outline: none;
  background: none;
  box-shadow: none;
  box-sizing: border-box;
  -webkit-appearance: none;
  &:focus {
    outline-color: transparent;
    outline-style: none;
    box-shadow: none;
  }
}

@mixin input-reset {
  background: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  border: none;
  outline: none;
  box-shadow: none;
  box-sizing: border-box;
  border-radius: 0;
  &[type=number]::-webkit-inner-spin-button,
  &[type=number]::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }
}

@mixin visually-hidden {
  position: absolute !important;
  clip: rect(0 0 0 0) !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
}

@mixin box-shadow {
  box-shadow: 0 20px 40px 0 transparentize($c-void, .95);
}

@mixin drop-shadow {
  @supports(filter: drop-shadow(0 20px 40px transparentize($c-void, .9))) {
    filter: drop-shadow(0 20px 40px transparentize($c-void, .9));
  }
}

@mixin blur ($_amount){
  @supports(filter: blur($_amount)) {
    filter: blur($_amount);
  }
}

@mixin input-placeholder {
  &::-webkit-input-placeholder { @content; }
  &::-moz-placeholder { @content; }
  &.placeholder { @content; }
  &:-moz-placeholder { @content; }
  &:-ms-input-placeholder { @content; }
}
